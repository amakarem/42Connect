{% extends 'base.html.twig' %}

{% block title %}Python Demo{% endblock %}

{% block body %}
    <main style="max-width: 640px; margin: 3rem auto; font-family: sans-serif;">
        <h1 style="margin-bottom: 1rem;">Python Embedding Demo</h1>
        <p style="margin-bottom: 1.5rem;">
            Enter some text and click the button to execute the bundled Python script.
        </p>

        <form id="python-demo-form">
            <label for="demo-text" style="display: block; margin-bottom: 0.5rem;">Text to embed</label>
            <textarea
                id="demo-text"
                name="text"
                rows="4"
                style="width: 100%; padding: 0.5rem; margin-bottom: 1rem;"
                placeholder="Hello from Symfony"
            ></textarea>

            <button
                type="submit"
                style="padding: 0.75rem 1.25rem; background: #1b8ef2; color: #fff; border: none; cursor: pointer;"
            >
                Run Python Script
            </button>
        </form>

        <section style="margin-top: 2rem;">
            <h2 style="margin-bottom: 0.75rem;">Result</h2>
            <pre
                id="python-demo-output"
                style="background: #111; color: #0f0; padding: 1rem; min-height: 8rem; overflow-x: auto;"
            >
Waiting for input…
            </pre>
        </section>
    </main>

    <script>
        (function () {
            const form = document.getElementById('python-demo-form');
            const output = document.getElementById('python-demo-output');

            form.addEventListener('submit', async (event) => {
                event.preventDefault();
                const formData = new URLSearchParams(new FormData(form));

                output.textContent = 'Running Python script…';

                try {
                    const response = await fetch('{{ path('demo_run_python') }}', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                        },
                        body: formData,
                    });

                    const payload = await response.json();

                    if (!response.ok || !payload.success) {
                        output.textContent = 'Error: ' + (payload.error || 'Unknown error');
                        if (payload.details) {
                            output.textContent += '\\n' + payload.details;
                        }
                        if (payload.stderr) {
                            output.textContent += '\\n' + payload.stderr;
                        }
                        if (payload.raw_output) {
                            output.textContent += '\\n' + payload.raw_output;
                        }
                        return;
                    }

                    output.textContent = JSON.stringify(payload.data, null, 2);
                } catch (error) {
                    output.textContent = 'Request failed: ' + error;
                }
            });
        }());
    </script>
{% endblock %}
